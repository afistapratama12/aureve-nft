/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UploadRouteImport } from './routes/upload'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as MarketplaceRouteImport } from './routes/marketplace'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AssetsAssetIdRouteImport } from './routes/assets.$assetId'

const UploadRoute = UploadRouteImport.update({
  id: '/upload',
  path: '/upload',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceRoute = MarketplaceRouteImport.update({
  id: '/marketplace',
  path: '/marketplace',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AssetsAssetIdRoute = AssetsAssetIdRouteImport.update({
  id: '/assets/$assetId',
  path: '/assets/$assetId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/marketplace': typeof MarketplaceRoute
  '/profile': typeof ProfileRoute
  '/upload': typeof UploadRoute
  '/assets/$assetId': typeof AssetsAssetIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/marketplace': typeof MarketplaceRoute
  '/profile': typeof ProfileRoute
  '/upload': typeof UploadRoute
  '/assets/$assetId': typeof AssetsAssetIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/marketplace': typeof MarketplaceRoute
  '/profile': typeof ProfileRoute
  '/upload': typeof UploadRoute
  '/assets/$assetId': typeof AssetsAssetIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/marketplace' | '/profile' | '/upload' | '/assets/$assetId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/marketplace' | '/profile' | '/upload' | '/assets/$assetId'
  id:
    | '__root__'
    | '/'
    | '/marketplace'
    | '/profile'
    | '/upload'
    | '/assets/$assetId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MarketplaceRoute: typeof MarketplaceRoute
  ProfileRoute: typeof ProfileRoute
  UploadRoute: typeof UploadRoute
  AssetsAssetIdRoute: typeof AssetsAssetIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/upload': {
      id: '/upload'
      path: '/upload'
      fullPath: '/upload'
      preLoaderRoute: typeof UploadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace': {
      id: '/marketplace'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/assets/$assetId': {
      id: '/assets/$assetId'
      path: '/assets/$assetId'
      fullPath: '/assets/$assetId'
      preLoaderRoute: typeof AssetsAssetIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MarketplaceRoute: MarketplaceRoute,
  ProfileRoute: ProfileRoute,
  UploadRoute: UploadRoute,
  AssetsAssetIdRoute: AssetsAssetIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
